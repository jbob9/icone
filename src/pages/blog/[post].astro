---
import PortableText from '../../components/PortableText.astro';
import Badge from '../../components/ui/Badge.astro';
import Layout from '../../layouts/Layout.astro';
import { loadQuery } from '../../sanity/lib/load-query';
import type { Post } from '../../sanity/lib/types';
import { urlForImage } from '../../sanity/lib/url-for-image';


export async function getStaticPaths() {
  const { data: posts } = await loadQuery<Post[]>({
    query: `*[_type == "post"]{
      slug,
      title,
      overview,
      body,
      mainImage,
      categories[]->{ title },
      author->{
        name,
        role,
        image
      },
      publishedAt,
    }`,
  });
  return posts.map((post) => ({
    params: { post: post.slug.current },
    props: { post} 
  }));
}

const { post } = Astro.props;

---

<Layout
description={post.overview} 
title={post.title}
image={urlForImage(post.mainImage).url()}
>
      {/* Hero Section */}
      <div class="relative h-[50vh] md:h-[60vh] overflow-hidden">
        <img 
          src={urlForImage(post.mainImage).format('webp').fit('fill').url()} 
          alt={post.title} 
          class="w-full h-full object-cover"
        />
        <div class="absolute inset-0 bg-black/50" />
      </div>

      {/* Content */}
      <div class="container mx-auto px-4 py-16">
        <a href="/blog" class="inline-flex items-center text-sm mb-8 hover:text-primary">
          <svg width="24" height="24" class="w-4 h-4 mr-1" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" color="#000"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path></svg>
          Back to Blog
        </a>

        <article class="max-w-3xl mx-auto">
          <div class="flex items-center gap-4 mb-6">
            <Badge>{post.categories[0]?.title}</Badge>
            <span class="text-sm text-muted-foreground">{new Date(post.publishedAt).toLocaleDateString()}</span>
          </div>

          <h1 class="text-4xl md:text-5xl font-bold mb-8">{post.title}</h1>

          {/* Author */}
          <div class="flex items-center gap-4 mb-12 p-4 border rounded-lg">
            <img
              src={urlForImage(post.author.image).width(48).height(48).url()}
              alt={post.author.name}
              class="w-12 h-12 rounded-full object-cover"
            />
            <div>
              <h3 class="font-medium">{post.author.name}</h3>
              <p class="text-sm text-muted-foreground">Ceo of Icone</p>
            </div>
          </div>


          <div class="prose prose-lg max-w-none">
            <PortableText portableText={post.body} />
          </div>
        </article>
      </div>
</Layout>
