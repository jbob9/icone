---
import { Image } from 'astro:assets';
import Gallery from '../../components/gallery';
import SectionTitle from '../../components/SectionTitle.astro';
import Card from '../../components/ui/Card.astro';
import CardContent from '../../components/ui/CardContent.astro';
import CardHeader from '../../components/ui/CardHeader.astro';
import Layout from '../../layouts/Layout.astro';
import { loadQuery } from '../../sanity/lib/load-query';
import type { Project } from '../../sanity/lib/types';
import { urlForImage } from '../../sanity/lib/url-for-image';


export async function getStaticPaths() {
  const { data: projects} = await loadQuery<Project[]>({
    query: `*[_type == "project"]{
      name,
      slug,
      logo,
      websiteUrl,
      mainImage,
      overview,
      tags[],
      solutions,
      challenges,
      technologies[],
      features[],
      gallery[],
      results[],
      status,
      publishedAt,
    }`,
  });
  return projects.map((project) => ({
    params: { slug: project.slug.current },
    props: { project } 
  }));
}

const { project } = Astro.props;
---

<Layout
  title={project.name}
  description={project.overview}>
<div class="min-h-screen ">
    <div class="container mx-auto px-4 pb-16 space-y-16">

      <div class=" grid grid-cols-1 md:grid-cols-8 gap-6 md:gap-8 overflow-hidden">
        <div class="col-span-full md:col-span-5 relative h-56 md:h-96">
          <Image
            src={urlForImage(project.mainImage).format('webp').fit('fill').url()} 
            alt={project.name} 
            height={220}
            width={1120}
            class="w-full h-full object-cover rounded-2xl"
          />
        </div>
        <div class="col-span-full flex justify-center md:col-span-3">
            <div class="flex flex-col items-start justify-center space-y-4 md:space-y-6">
              <h1 class="text-4xl md:text-6xl font-bold">{project.name}</h1>
              <p class="text-sm md:text-base mx-auto text-neutral-600">{project.overview}</p>
  
              <a href={project.websiteUrl} target="_blank" rel='noopener' class="py-3 px-4 inline-flex justify-center items-center gap-x-2 text-sm font-medium w-full rounded-lg border border-transparent bg-[#c4ff00] text-black focus:outline-hidden disabled:opacity-50 disabled:pointer-events-none" >
                <span>Visit website</span>
                <svg class="shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m9 18 6-6-6-6"/></svg>
              </a>
            </div>
        </div>
  
      </div>
    
      {/* Project Overview */}
      <!-- <section>
        <SectionTitle>Project Overview</SectionTitle>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          <Card>
            <CardHeader className="text-lg font-semibold">Client</CardHeader>
            <CardContent>{project.client}</CardContent>
          </Card>
          <Card>
            <CardHeader className="text-lg font-semibold">Duration</CardHeader>
            <CardContent>{project.duration}</CardContent>
          </Card>
          <Card>
            <CardHeader className="text-lg font-semibold">Year</CardHeader>
            <CardContent>{project.year}</CardContent>
          </Card>
        </div>
      </section> -->

      

      {/* Technologies Used */}
      <section >
        <SectionTitle>Technologies</SectionTitle>
        <div class="flex flex-wrap gap-3">
          {project.technologies?.map((tech, index) => (
            <span 
              class="px-4 py-2 bg-black text-white rounded-full text-sm"
            >
              {tech}
            </span>
          ))}
        </div>
      </section>

      {/* Challenge & Solution */}
      <section class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <Card>
          <CardHeader className="text-xl font-bold">The Challenge</CardHeader>
          <CardContent>{project.challenges}</CardContent>
        </Card>
        <Card>
          <CardHeader className="text-xl font-bold">Our Solution</CardHeader>
          <CardContent>{project.solutions}</CardContent>
        </Card>
      </section>

      <section>
        <SectionTitle>Key Features</SectionTitle>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          {project.features?.map((feature, index) => (
            <Card>
              <CardContent className="flex items-center gap-4 p-6">
                <p class="text-lg">{feature}</p>
              </CardContent>
            </Card>
          ))}
        </div>
      </section>

      {/* Results */}
      <section>
        <SectionTitle>Key Results</SectionTitle>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          {project.results?.map((result, index) => (
            <Card>
              <CardContent className="flex items-center gap-4 p-6">
                <p class="text-lg">{result}</p>
              </CardContent>
            </Card>
          ))}
        </div>
      </section>

      {/* Gallery */}
      <Gallery gallery={project?.gallery} client:load />
    </div>
  </div>
</Layout>